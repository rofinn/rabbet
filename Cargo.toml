[package]
name = "rabbet"
version = "0.1.0"
rust-version = "1.85.0"
edition = "2024"

[dependencies]
anyhow = "1.0.98"
clap = { version = "4", default-features = false, features = [
    "std",
    "derive",
    "help",
    "usage",
    "error-context",
] }
clap_complete = "4"
itertools = { version = "0.14.0", default-features = false }
polars = { version = "0.49", default-features = false, features = [
    "csv",
    "fmt",
    "lazy",
    "polars-ops",
    "sql",
] }
regex = { version = "1.11.1", default-features = false, features = ["std"] }
termsize = { version = "0.1", default-features = false }

[dev-dependencies]
tempfile = "3.0"
trycmd = "0.15"

[lints.clippy]
# Deny common clippy lints that catch potential bugs or poor practices
nursery = { level = "warn", priority = -1 }
pedantic = { level = "warn", priority = -1 }
unwrap_used = "warn"
expect_used = "warn"
panic = "warn"
todo = "warn"
unimplemented = "warn"
unreachable = "warn"
# Allow some pedantic lints that can be too noisy
missing_errors_doc = "allow"
missing_panics_doc = "allow"
module_name_repetitions = "allow"

# Our default release profile is similar to what we'll distribute, but
# 1. We want slightly faster build times, so we go with s instead of z
# 2. We allow more than 1 codegen units
# 3. We allow incremental compilation, so running and rerunning our benchmarks script is faster
[profile.release]
opt-level = "s"
codegen-units = 16
lto = "thin"
panic = "abort"
strip = "symbols"
debug = false
incremental = true
overflow-checks = false

# For distribution we want the smallest and most optimized builds since we won't run this often.
[profile.dist]
inherits = "release"
opt-level = "z"
codegen-units = 1
lto = true
incremental = false
