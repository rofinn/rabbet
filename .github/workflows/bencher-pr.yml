name: Benchmark Pull Requests

on:
  pull_request:
    types: [opened, reopened, edited, synchronize]

jobs:
  benchmark_pr_branch:
    name: Continuous Benchmarking PRs with Bencher
    # Only run for PRs from the same repository
    if: github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository
    permissions:
      pull-requests: write
      checks: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4 # zizmor: ignore[unpinned-uses]
        with:
          persist-credentials: false

      - uses: dtolnay/rust-toolchain@stable # zizmor: ignore[unpinned-uses]

      - uses: Swatinem/rust-cache@v2 # zizmor: ignore[unpinned-uses]

      - name: Install hyperfine
        run: |
          wget https://github.com/sharkdp/hyperfine/releases/latest/download/hyperfine_1.19.0_amd64.deb
          sudo dpkg -i hyperfine_1.19.0_amd64.deb

      - name: Install bencher CLI
        uses: bencherdev/bencher@main # zizmor: ignore[unpinned-uses]

      - name: Run benchmarks
        env:
          BENCHER_API_TOKEN: ${{ secrets.BENCHER_API_TOKEN }}
          BENCHER_PROJECT: rabbet
          BENCHER_BRANCH: ${{ github.head_ref }}
          BENCHER_TESTBED: ubuntu-latest
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # Additional PR-specific settings for bencher
          BENCHER_BRANCH_START_POINT: ${{ github.base_ref }}
          BENCHER_BRANCH_START_POINT_HASH: ${{ github.event.pull_request.base.sha }}
        # TODO: We need to make these optional arguments to our benchmark script (e.g., start-poin*).
        run: |
          chmod +x scripts/benchmark

          # Run benchmarks with PR-specific bencher settings
          bencher run \
            --project "$BENCHER_PROJECT" \
            --token "$BENCHER_API_TOKEN" \
            --branch "$BENCHER_BRANCH" \
            --start-point "$BENCHER_BRANCH_START_POINT" \
            --start-point-hash "$BENCHER_BRANCH_START_POINT_HASH" \
            --start-point-clone-thresholds \
            --start-point-reset \
            --testbed "$BENCHER_TESTBED" \
            --err \
            --adapter shell \
            --github-actions "$GITHUB_TOKEN" \
            ./scripts/benchmark
