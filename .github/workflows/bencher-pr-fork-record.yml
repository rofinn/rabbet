name: Record Forked PR Benchmarks with Bencher

on:
  # TODO: Rework this to use `workflow_call`, but currently this is what is used in the bencher docs.
  workflow_run: # zizmor: ignore[dangerous-triggers]
    workflows: ["Run Fork PR Benchmarks"]
    types: [completed]

jobs:
  track_fork_pr_branch:
    name: Track Fork PR Benchmarks
    if: github.event.workflow_run.conclusion == 'success'
    permissions:
      pull-requests: write
      checks: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4 # zizmor: ignore[unpinned-uses]
        with:
          persist-credentials: false
      - name: Download benchmark results
        uses: dawidd6/action-download-artifact@v6 # zizmor: ignore[unpinned-uses]
        with:
          name: benchmark-results
          run_id: ${{ github.event.workflow_run.id }}

      - name: Download PR event
        uses: dawidd6/action-download-artifact@v6 # zizmor: ignore[unpinned-uses]
        with:
          name: pr-event
          run_id: ${{ github.event.workflow_run.id }}

      - name: Export PR data
        uses: actions/github-script@v7 # zizmor: ignore[unpinned-uses]
        with:
          script: |
            const fs = require('fs');
            const prEvent = JSON.parse(fs.readFileSync('event.json', 'utf8'));

            core.exportVariable('PR_HEAD', prEvent.pull_request.head.ref);
            core.exportVariable('PR_BASE', prEvent.pull_request.base.ref);
            core.exportVariable('PR_BASE_SHA', prEvent.pull_request.base.sha);
            core.exportVariable('PR_NUMBER', prEvent.number);

      - name: Install bencher CLI
        uses: bencherdev/bencher@main # zizmor: ignore[unpinned-uses]

      - name: Track benchmarks with Bencher
        env:
          BENCHER_API_TOKEN: ${{ secrets.BENCHER_API_TOKEN }}
          BENCHER_PROJECT: rabbet
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Process each benchmark result
          for json_file in *.json; do
            if [[ -f "$json_file" ]]; then
              benchmark_name="${json_file%_results.json}"

              bencher run \
                --project "$BENCHER_PROJECT" \
                --token "$BENCHER_API_TOKEN" \
                --branch "$PR_HEAD" \
                --start-point "$PR_BASE" \
                --start-point-hash "$PR_BASE_SHA" \
                --start-point-clone-thresholds \
                --start-point-reset \
                --testbed ubuntu-latest \
                --err \
                --adapter json \
                --github-actions "$GITHUB_TOKEN" \
                --ci-number "$PR_NUMBER" \
                --file "$json_file"
            fi
          done
